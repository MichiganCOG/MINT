import numpy as np
import matplotlib.pyplot as plt


def data_stl10_full():

    ## STL-10
    oneshot_x   = np.array([100.0, 90.000016, 79.999992, 70.000008, 59.999984, 50.000000, 40.000016, 29.999992, 20.000008, 9.999984])
    oneshot_y   = np.array([42.100000, 42.087500, 42.112500, 42.150000, 41.250000, 39.875000, 38.362500, 34.437500, 27.800000, 14.837500])

    a_group_2_x   = np.array([100.0, 93.28179283450514, 90.07242027577183, 90.07242027577183, 56.65600448399164, 50.69300217848319, 39.926658791100614, 29.77952384581674, 18.689385134233945, 8.59623592401349])
    a_group_2_y   = np.array([42.1, 40.2875, 40.1625, 40.1625, 30.4, 25.224999999999998, 15.312500000000002, 12.4375, 10.225, 10.0])

    a_group_5_x   = np.array([100.0, 89.6213615202383, 81.70213053115613, 72.45989177447936, 62.709790154272184, 51.17728597831679, 40.52705161671398, 29.898371853743118, 20.830038615678728, 10.889319716225572])
    a_group_5_y   = np.array([42.1, 42.2375, 41.65, 37.7875, 31.45, 30.4375, 24.275, 15.787499999999998, 13.350000000000001, 10.0])

    legends = ['weight-based','a-group-2','a-group-5']
    
    return oneshot_x, oneshot_y, a_group_2_x, a_group_2_y, a_group_5_x, a_group_5_y, legends


def data_stl10_conv():

    ## STL-10, Conv2
    oneshot_x   = np.array([100.0,90.0,      80.0,      70.0,      60.0,      50.0,      40.0,      30.0,      20.0,      10.0])
    oneshot_y   = np.array([42.1, 42.225000, 42.087500, 41.937500, 41.200000, 41.287500, 40.837500, 40.612500, 41.837500, 38.950000 ])

    #a_x         = np.array([])
    #a_y         = np.array([])

    #b_x         = np.array([99.305556, 90.277778, 79.166667, 70.138889, 59.722222, 49.305556, 40.277778, 29.861111, 20.138889, 9.722222])
    #b_y         = np.array([42.062500, 42.225000, 41.612500, 30.425000, 29.225000, 27.187500, 29.262500, 23.912500, 25.037500, 10.0])

    a_group_2_x = np.array([99.82096354166666, 84.29361979166666, 84.29361979166666, 84.29361979166666, 60.489908854166664, 50.935872395833336, 41.7236328125, 34.22037760416667, 22.867838541666664, 12.972005208333334])
    a_group_2_y = np.array([41.9, 40.5, 40.5, 40.5, 41.8125, 40.887499999999996, 41.725, 35.1375, 31.65, 17.875])

    a_group_5_x = np.array([100.0, 93.115234, 74.584961, 69.734701, 60.782878, 53.206380, 43.139648, 36.385091, 26.009115, 9.513346])
    a_group_5_y = np.array([42.1,  42.137500, 42.212500, 42.137500, 42.025000, 43.075000, 42.400000, 27.387500, 25.300000, 21.325000])


    legends = ['weight-based','a-group-2','a-group-5']


    return oneshot_x, oneshot_y, a_group_2_x, a_group_2_y, a_group_5_x, a_group_5_y, legends



def data_stl10_fc():

    # STL-10
    oneshot_x   = np.array([100.0,     90.277778, 79.861111, 70.138889, 59.722222, 50.0,      40.277778, 29.861111, 20.138889, 9.722222])
    oneshot_y   = np.array([42.100000, 39.925000, 38.687500, 37.162500, 32.200000, 30.987500, 38.100000, 36.137500, 31.575000, 20.512500])

    a_x         = np.array([])
    a_y         = np.array([])

    b_x         = np.array([99.305556, 90.277778, 79.166667, 70.138889, 59.722222, 49.305556, 40.277778, 29.861111, 20.138889, 9.722222])
    b_y         = np.array([42.062500, 42.225000, 41.612500, 30.425000, 29.225000, 27.187500, 29.262500, 23.912500, 25.037500, 10.0])

    a_group_2_x = np.array([100.0,     88.888889, 78.472222, 65.972222, 64.583333, 45.138889, 37.500000, 25.000000, 22.222222, 17.361111])
    a_group_2_y = np.array([42.100000, 42.100000, 36.775000, 38.550000, 41.837500, 19.162500, 29.925000, 18.612500, 13.212500, 10.0 ])

    a_group_2_reset_x = np.array([])
    a_group_2_reset_y = np.array([])

    a_group_3_x = np.array([100.0,     89.583333, 80.555556, 69.444444, 57.638889, 47.222222, 39.583333, 38.888889, 20.833333, 6.944444])
    a_group_3_y = np.array([42.100000, 42.100000, 36.862500, 38.350000, 43.800000, 43.562500, 38.075000, 27.950000, 17.125000, 10.000000])

    legends = ['weight-based','a','b','a-group-2','a-group-2-reset','a-group-3']

    return oneshot_x, oneshot_y, a_x, a_y, b_x, b_y, a_group_2_x, a_group_2_y, a_group_2_reset_x, a_group_2_reset_y, a_group_3_x, a_group_3_y, legends

def data_cifar10_fc():

    # CIFAR-10
    oneshot_x   = np.array([100.000000, 90.277778, 79.861111, 70.138889, 59.722222, 50.000000, 40.277778, 29.861111, 20.138889, 9.722222])
    oneshot_y   = np.array([77.190000, 77.610000, 74.830000, 68.800000, 57.860000, 56.750000, 56.630000, 55.960000, 22.180000, 9.870000])

    a_group_2_x_random = np.array([100.0, 81.94444444444444, 74.30555555555556, 59.02777777777778, 50.0, 43.05555555555556, 33.33333333333333, 25.694444444444443, 14.583333333333334, 11.11111111111111])
    a_group_2_y_random = np.array([77.19, 55.059999999999995, 53.32, 38.879999999999995, 25.080000000000002, 14.899999999999999, 14.59, 14.11, 10.0, 10.0])


    a_group_2_x_uniform = np.array([100.0, 95.83333333333334, 88.88888888888889, 85.41666666666666, 79.86111111111111, 75.69444444444444, 70.13888888888889, 65.97222222222221, 63.888888888888886, 59.72222222222222, 54.166666666666664, 50.0, 44.44444444444444, 42.36111111111111, 38.19444444444444, 31.25, 24.305555555555554, 17.36111111111111, 13.88888888888889, 6.944444444444445])
    a_group_2_y_uniform = np.array([77.19, 77.2, 78.19, 77.78, 69.84, 60.06, 46.26, 42.38, 34.21, 35.120000000000005, 34.32, 24.97, 28.62, 28.62, 28.62, 10.0, 10.0, 10.0, 10.0, 10.0])

    a_group_3_x = np.array([100.0, 93.05555555555556, 88.19444444444444, 82.63888888888889, 78.47222222222221, 71.52777777777779, 70.13888888888889, 64.58333333333334, 59.02777777777778, 56.94444444444444, 54.166666666666664, 47.91666666666667, 44.44444444444444, 38.19444444444444, 33.33333333333333, 29.166666666666668, 22.916666666666664, 16.666666666666664, 10.416666666666668, 6.25]
)
    a_group_3_y = np.array([77.19, 69.58, 69.17, 54.13, 51.849999999999994, 18.459999999999997, 18.44, 18.72, 9.68, 8.66, 9.11, 11.19, 11.26, 13.07, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0])

    legends = ['weight-based', 'a-group-2-random','a-group-2-uniform','a-group-3-random']

    return oneshot_x, oneshot_y, a_group_2_x_random, a_group_2_y_random, a_group_2_x_uniform, a_group_2_y_uniform, a_group_3_x, a_group_3_y, legends




if __name__== '__main__':

    dataset = 'STL10'
    layers  = 'fc'


    if 'STL10' in dataset:
        if 'conv' in layers:
            data = data_stl10_conv()
        elif 'full' in layers:
            data = data_stl10_full()
        elif 'fc' in layers:
            data = data_stl10_fc()
    else:
        data = data_cifar10_fc()
    

    for plot_idx  in np.arange(0,len(data)-1,2):
        plt.plot(data[plot_idx], data[plot_idx+1])

    plt.legend(data[-1])

    plt.xlim([101.0, 8.5])
    plt.xlabel('% of weights remaining from original model')    
    plt.ylabel('Recognition performance (%)')
    plt.title('Comparison of performance variation when AlexNet is one-shot pruned, w/o retraining')

    plt.show()
